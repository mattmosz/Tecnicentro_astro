---
import Layout from "../../layouts/Layout.astro";
---

<Layout title="Gesti√≥n de Clientes - TecniCentro Ibarra Express">
  <header class="navbar" role="banner">
    <div class="container">
      <a href="/admin/dashboard" class="brand">
        <span class="logo-circle">üîß</span>
        <span class="brand-text">TecniCentro Ibarra Express</span>
      </a>
      <div class="user-menu">
        <span id="userWelcome" class="user-chip">Cargando‚Ä¶</span>
        <button
          type="button"
          id="btnLogout"
          class="btn btn-orange"
          onclick="window.logout?.()"
        >
          Cerrar Sesi√≥n
        </button>
      </div>
    </div>
  </header>

  <main class="page">
    <div class="container">
      <div class="header-row">
        <div>
          <h1>Gesti√≥n de Clientes</h1>
          <p class="muted">Administra tus clientes y contactos</p>
        </div>
        <div class="actions">
          <input
            id="q"
            class="input"
            placeholder="Buscar por CI / nombre / email"
          />
          <button class="btn btn-outline" id="btnBuscar">Buscar</button>
          <button class="btn btn-orange" id="btnNuevo">Nuevo Cliente</button>
        </div>
      </div>

      <div class="card">
        <div class="card-head">
          <h3>Listado de Clientes</h3>
        </div>
        <div class="card-body">
          <div id="wrapTable" class="table-wrap">
            <div class="skeleton"></div>
          </div>
          <div class="pager">
            <button id="prev" class="btn btn-outline" disabled>Anterior</button>
            <span id="pageInfo" class="muted">P√°gina 1</span>
            <button id="next" class="btn btn-outline" disabled>Siguiente</button
            >
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Modal Cliente -->
  <dialog id="modalCliente">
    <form id="frmCliente" method="dialog" class="modal">
      <div class="modal-head">
        <h3 id="modalTitle">Nuevo Cliente</h3>
        <button class="icon" type="button" id="closeCliente">‚úñ</button>
      </div>
      <div class="modal-body grid2">
        <label
          >Tipo
          <select name="tipo" required class="input">
            <option value="">Seleccionar tipo</option>
            <option value="particular">Particular</option>
            <option value="institucion">Instituci√≥n</option>
          </select>
        </label>
        <label
          >CI/RUC<input name="identificacion" required class="input" /></label
        >
        <label>Nombre<input name="nombre" required class="input" /></label>
        <label>Tel√©fono<input name="telefono" class="input" /></label>
        <label>Email<input name="email" type="email" class="input" /></label>
        <label>Direcci√≥n<input name="direccion" class="input" /></label>
      </div>
      <div class="modal-foot">
        <button class="btn btn-outline" value="cancel">Cancelar</button>
        <button class="btn btn-orange" id="btnGuardarCliente" value="default"
          >Guardar</button
        >
      </div>
    </form>
  </dialog>

  <style>
    :root {
      --bg: #f6f8fb;
      --card: #fff;
      --text: #0f172a;
      --muted: #64748b;
      --orange-500: #fb923c;
      --ring: 0 1px 2px rgba(0, 0, 0, 0.04), 0 10px 20px rgba(2, 6, 23, 0.08);
      --radius: 16px;
      --container: 1200px;
    }

    body {
      margin: 0;
      background: var(--bg);
      color: var(--text);
      font-family:
        "Inter",
        -apple-system,
        BlinkMacSystemFont,
        "Segoe UI",
        sans-serif;
      line-height: 1.6;
    }

    .muted {
      color: var(--muted);
    }

    .navbar {
      position: sticky;
      top: 0;
      background: rgba(255, 255, 255, 0.9);
      backdrop-filter: saturate(180%) blur(10px);
      border-bottom: 1px solid #eef2f7;
      z-index: 20;
    }

    .navbar .container {
      display: flex;
      align-items: center;
      justify-content: space-between;
      height: 64px;
    }

    .brand {
      display: flex;
      align-items: center;
      gap: 10px;
      text-decoration: none;
      color: var(--text);
      font-weight: 700;
    }

    .logo-circle {
      display: grid;
      place-items: center;
      width: 36px;
      height: 36px;
      border-radius: 50%;
      background: linear-gradient(135deg, var(--orange-500), #ffb07a);
      box-shadow: var(--ring);
    }

    .user-menu {
      display: flex;
      align-items: center;
      gap: 12px;
    }

    .user-chip {
      padding: 8px 12px;
      border-radius: 999px;
      background: #f4f7fb;
      border: 1px solid #e5e7eb;
      color: #334155;
      font-weight: 600;
      font-size: 0.875rem;
    }

    .btn {
      border: 0;
      border-radius: 10px;
      padding: 10px 14px;
      font-weight: 600;
      cursor: pointer;
      font-size: 0.875rem;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      transition: all 0.15s ease;
    }

    .btn:hover {
      transform: translateY(-1px);
      box-shadow: var(--ring);
    }

    .btn-outline {
      background: #fff;
      border: 1px solid #e5e7eb;
      color: var(--text);
    }

    .btn-orange {
      background: var(--orange-500);
      color: #fff;
    }

    .btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      transform: none;
    }

    .container {
      max-width: var(--container);
      margin-inline: auto;
      padding: 0 20px;
    }

    .page {
      padding: 24px 0 48px;
    }

    .header-row {
      display: flex;
      gap: 12px;
      align-items: end;
      justify-content: space-between;
      margin: 16px 0 18px;
      flex-wrap: wrap;
    }

    h1 {
      margin: 0 0 6px;
      font-size: 2rem;
      font-weight: 700;
      color: var(--text);
    }

    .actions {
      display: flex;
      gap: 8px;
      flex-wrap: wrap;
    }

    .input {
      border: 1px solid #e5e7eb;
      border-radius: 10px;
      padding: 10px 12px;
      min-width: 240px;
      font-size: 0.875rem;
      background: var(--card);
      color: var(--text);
      transition: all 0.15s ease;
    }

    .input:focus {
      outline: none;
      border-color: var(--orange-500);
      box-shadow: 0 0 0 3px rgba(251, 146, 60, 0.1);
    }

    .card {
      background: var(--card);
      border-radius: var(--radius);
      box-shadow: var(--ring);
      overflow: hidden;
    }

    .card-head {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 14px 16px;
      border-bottom: 1px solid #eef2f7;
      background: #fafbfc;
    }

    .card-head h3 {
      margin: 0;
      font-size: 1rem;
      font-weight: 600;
      color: var(--text);
    }

    .card-body {
      padding: 12px 16px 16px;
    }

    .table-wrap {
      overflow: auto;
      margin-bottom: 1rem;
    }

    table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
    }

    thead th {
      font-size: 12px;
      text-transform: uppercase;
      letter-spacing: 0.04em;
      color: var(--muted);
      text-align: left;
      padding: 10px;
      font-weight: 600;
      background: #fafbfc;
      border-bottom: 1px solid #eef2f7;
    }

    tbody td {
      padding: 12px 10px;
      border-top: 1px solid #eef2f7;
      font-size: 0.875rem;
    }

    tr:hover td {
      background: #fafafa;
    }

    .row-actions {
      display: flex;
      gap: 6px;
    }

    .icon-btn {
      border: 1px solid #e5e7eb;
      border-radius: 8px;
      padding: 6px 8px;
      background: #fff;
      cursor: pointer;
      font-size: 0.875rem;
      transition: all 0.15s ease;
    }

    .icon-btn:hover {
      background: #f8fafc;
      border-color: var(--orange-500);
    }

    .skeleton {
      height: 64px;
      border-radius: 12px;
      background: linear-gradient(90deg, #f2f4f8 25%, #e6eaf1 37%, #f2f4f8 63%);
      background-size: 400% 100%;
      animation: shimmer 1.2s infinite;
    }

    @keyframes shimmer {
      0% {
        background-position: 100% 0;
      }
      100% {
        background-position: 0 0;
      }
    }

    .pager {
      display: flex;
      align-items: center;
      gap: 10px;
      justify-content: flex-end;
      padding: 10px 0;
      border-top: 1px solid #eef2f7;
    }

    /* ====== Forzar estilos del listado dentro de esta card ====== */
    .card .table-wrap {
      overflow: auto;
      margin-bottom: 12px;
    }

    /* Estructura de tabla */
    .card .table-wrap table {
      width: 100% !important;
      border-collapse: separate !important;
      border-spacing: 0 !important;
      table-layout: auto !important;
    }
    .card .table-wrap thead th {
      background: #fafbfc !important;
      border-bottom: 1px solid #eef2f7 !important;
      color: #64748b !important;
      font-size: 12px !important;
      font-weight: 700 !important;
      text-transform: uppercase !important;
      letter-spacing: 0.04em !important;
      text-align: left !important;
      padding: 12px 10px !important;
    }
    .card .table-wrap tbody td {
      border-top: 1px solid #eef2f7 !important;
      padding: 14px 12px !important;
      vertical-align: middle !important;
      font-size: 0.95rem !important;
      color: #0f172a !important;
    }
    .card .table-wrap tbody tr:hover td {
      background: #fbfbfd !important;
    }

    /* Nombre en dos l√≠neas y fuerte */
    .card .table-wrap tbody td:nth-child(2) strong {
      display: block !important;
      font-weight: 800 !important;
      line-height: 1.25 !important;
    }

    /* Tel√©fono/Email sin salto cuando quepa */
    .card .table-wrap tbody td:nth-child(3),
    .card .table-wrap tbody td:nth-child(4) {
      white-space: nowrap !important;
    }

    /* Email y Direcci√≥n truncadas en 2 l√≠neas */
    .card .table-wrap tbody td:nth-child(4),
    .card .table-wrap tbody td:nth-child(5) {
      max-width: 420px !important;
      overflow: hidden !important;
      text-overflow: ellipsis !important;
      display: -webkit-box !important;
      -webkit-line-clamp: 2 !important;
      -webkit-box-orient: vertical !important;
    }

    /* Columna Acciones fija y alineada */
    .card .table-wrap thead th:last-child,
    .card .table-wrap tbody td:last-child {
      width: 112px !important;
      text-align: right !important;
    }

    /* Contenedor acciones */
    .card .table-wrap tbody td:last-child .row-actions {
      display: flex !important;
      gap: 8px !important;
      justify-content: flex-end !important;
    }

    /* Botones de acci√≥n (aunque no tengan clase) */
    .card .table-wrap tbody td:last-child button {
      width: 36px !important;
      height: 36px !important;
      padding: 0 !important;
      border: 1px solid #e5e7eb !important;
      background: #fff !important;
      color: #334155 !important;
      border-radius: 10px !important;
      display: inline-grid !important;
      place-items: center !important;
      cursor: pointer !important;
      transition:
        background 0.15s,
        border-color 0.15s,
        transform 0.15s,
        box-shadow 0.15s !important;
    }
    .card .table-wrap tbody td:last-child button:hover {
      background: #f8fafc !important;
      border-color: #d1d5db !important;
      transform: translateY(-1px) !important;
      box-shadow:
        0 1px 2px rgba(0, 0, 0, 0.04),
        0 10px 20px rgba(2, 6, 23, 0.08) !important;
    }
    .card .table-wrap tbody td:last-child button svg {
      width: 18px !important;
      height: 18px !important;
    }

    /* Responsive */
    @media (max-width: 1024px) {
      .card .table-wrap tbody td:nth-child(4),
      .card .table-wrap tbody td:nth-child(5) {
        max-width: 300px !important;
      }
      .card .table-wrap thead th:last-child,
      .card .table-wrap tbody td:last-child {
        width: 96px !important;
      }
    }
    @media (max-width: 720px) {
      .card .table-wrap tbody td {
        padding: 12px 8px !important;
      }
      .card .table-wrap tbody td:nth-child(4),
      .card .table-wrap tbody td:nth-child(5) {
        max-width: 220px !important;
      }
    }

    /* Modal */
    dialog::backdrop {
      background: rgba(0, 0, 0, 0.25);
    }

    dialog {
      border: 0;
      border-radius: 14px;
      padding: 0;
      box-shadow: var(--ring);
      max-width: 720px;
      width: 100%;
    }

    .modal {
      background: #fff;
      border-radius: 14px;
      overflow: hidden;
    }

    .modal-head {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 12px 16px;
      border-bottom: 1px solid #eef2f7;
      background: #fafbfc;
    }

    .modal-head h3 {
      margin: 0;
      font-size: 1.125rem;
      font-weight: 600;
      color: var(--text);
    }

    .icon {
      background: none;
      border: none;
      font-size: 1.25rem;
      cursor: pointer;
      color: var(--muted);
      padding: 4px;
      border-radius: 6px;
      transition: all 0.15s ease;
    }

    .icon:hover {
      background: #f1f5f9;
      color: var(--text);
    }

    .modal-body {
      padding: 16px;
    }

    .grid2 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 12px;
    }

    .modal-body label {
      display: block;
      font-weight: 500;
      color: var(--text);
      font-size: 0.875rem;
      margin-bottom: 4px;
    }

    .modal-foot {
      display: flex;
      justify-content: flex-end;
      gap: 8px;
      padding: 12px 16px;
      border-top: 1px solid #eef2f7;
      background: #fafbfc;
    }

    /* Responsive */
    @media (max-width: 720px) {
      .grid2 {
        grid-template-columns: 1fr;
      }

      .input {
        min-width: unset;
        width: 100%;
      }

      .header-row {
        flex-direction: column;
        align-items: stretch;
      }

      .actions {
        justify-content: flex-start;
      }
    }
    /* ======== LISTADO: ajustes finos ======== */
    /* Fija un ancho a la columna de Acciones y alin√©ala a la derecha */
    .table-wrap thead th:last-child,
    .table-wrap tbody td:last-child {
      width: 120px !important;
      min-width: 120px !important;
      text-align: right !important;
      white-space: nowrap !important;
    }

    /* Evita que Direcci√≥n invada la columna Acciones */
    .table-wrap tbody td:nth-child(5) {
      /* recorta a 2 l√≠neas con elipsis */
      max-width: 520px;
      overflow: hidden;
      text-overflow: ellipsis;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
    }

    /* En pantallas medianas/peque√±as reduce el ancho de Direcci√≥n */
    @media (max-width: 1200px) {
      .table-wrap tbody td:nth-child(5) {
        max-width: 420px;
      }
    }
    @media (max-width: 992px) {
      .table-wrap tbody td:nth-child(5) {
        max-width: 320px;
      }
    }

    /* Contenedor de botones de acci√≥n */
    .row-actions {
      display: inline-flex;
      gap: 8px;
      justify-content: flex-end;
    }

    /* Botones de acci√≥n: pill, sombra y estados */
    .icon-btn {
      width: 36px;
      height: 36px;
      padding: 0;
      border: 1px solid #e5e7eb;
      background: #fff;
      color: #334155;
      border-radius: 12px;
      display: inline-grid;
      place-items: center;
      cursor: pointer;
      transition:
        background 0.15s,
        border-color 0.15s,
        transform 0.15s,
        box-shadow 0.15s;
      font-size: 0; /* oculta el tama√±o base del emoji para que no cambie el box */
      line-height: 0;
    }
    .icon-btn:hover {
      background: #f8fafc;
      border-color: #d1d5db;
      transform: translateY(-1px);
      box-shadow:
        0 1px 2px rgba(0, 0, 0, 0.04),
        0 10px 20px rgba(2, 6, 23, 0.08);
    }
    .icon-btn:active {
      transform: translateY(0);
    }

    /* Si usas los caracteres ‚úé y üóë, dales tama√±o consistente */
    .icon-btn::before {
      content: attr(data-ico);
      font-size: 16px;
      line-height: 1;
    }
    /* (Opcional) Colores por tipo si quieres diferenciarlos */
    .icon-btn[data-ico="‚úé"] {
      color: #1e40af;
    } /* editar */
    .icon-btn[data-ico="üóë"] {
      color: #be123c;
    } /* eliminar */

    /* Aplica el icono autom√°ticamente si el bot√≥n tiene el texto original */
    .icon-btn:empty::before {
      content: "‚úé";
    } /* fallback */
  </style>
  <style is:global>
    /* ===== LISTADO DE CLIENTES (GLOBAL, afecta innerHTML) ===== */

    /* separa filas con espacio vertical */
    #wrapTable table {
      border-collapse: separate !important;
      border-spacing: 0 10px !important; /* espacio entre filas */
      table-layout: fixed !important;
    }

    /* head fijo y limpio */
    #wrapTable thead th {
      position: sticky;
      top: 0;
      z-index: 1;
      background: #f7f9fc !important;
      border-bottom: 1px solid #e9eef6 !important;
      color: #64748b !important;
      font-size: 12px !important;
      font-weight: 700 !important;
      text-transform: uppercase !important;
      letter-spacing: 0.04em !important;
      text-align: left !important;
      padding: 12px 10px !important;
    }

    /* cada fila como tarjeta */
    #wrapTable tbody td {
      background: #fff !important;
      border-top: none !important; /* sin l√≠neas internas */
      padding: 14px 12px !important;
      vertical-align: middle !important;
      font-size: 0.95rem !important;
      color: #0f172a !important;
      box-shadow:
        0 1px 0 rgba(2, 6, 23, 0.06),
        0 8px 12px rgba(2, 6, 23, 0.04) !important;
    }

    /* esquinas redondeadas por fila */
    #wrapTable tbody tr td:first-child {
      border-radius: 12px 0 0 12px !important;
    }
    #wrapTable tbody tr td:last-child {
      border-radius: 0 12px 12px 0 !important;
    }

    /* hover elegante */
    #wrapTable tbody tr:hover td {
      transform: translateY(-1px);
      box-shadow:
        0 2px 4px rgba(2, 6, 23, 0.08),
        0 14px 24px rgba(2, 6, 23, 0.06) !important;
    }

    /* anchos por columna (aj√∫stalos si quieres) */
    #wrapTable thead th:nth-child(1) {
      width: 140px !important;
    } /* CI/RUC   */
    #wrapTable thead th:nth-child(2) {
      width: 240px !important;
    } /* Nombre   */
    #wrapTable thead th:nth-child(3) {
      width: 150px !important;
    } /* Tel√©fono */
    #wrapTable thead th:nth-child(4) {
      width: 280px !important;
    } /* Email    */
    #wrapTable thead th:nth-child(5) {
      width: auto !important;
    } /* Direcci√≥n*/
    #wrapTable thead th:nth-child(6) {
      width: 116px !important;
      text-align: right !important;
    }

    /* recortes para que no invadan */
    #wrapTable tbody td:nth-child(3),
    #wrapTable tbody td:nth-child(4) {
      white-space: nowrap !important;
    }

    #wrapTable tbody td:nth-child(5) {
      overflow: hidden !important;
      text-overflow: ellipsis !important;
      white-space: nowrap !important; /* o cambia a multiline (ver abajo) */
    }

    /* acciones alineadas */
    #wrapTable tbody td:last-child {
      text-align: right !important;
      white-space: nowrap !important;
    }
    #wrapTable .row-actions {
      display: inline-flex !important;
      gap: 8px !important;
      justify-content: flex-end !important;
    }

    /* botones bonitos */
    #wrapTable .icon-btn,
    #wrapTable td:last-child button {
      width: 36px !important;
      height: 36px !important;
      padding: 0 !important;
      border: 1px solid #e5e7eb !important;
      background: #fff !important;
      color: #334155 !important;
      border-radius: 10px !important;
      display: inline-grid !important;
      place-items: center !important;
      transition:
        background 0.15s,
        border-color 0.15s,
        transform 0.15s,
        box-shadow 0.15s !important;
      font-size: 16px !important;
      line-height: 1 !important;
    }
    #wrapTable .icon-btn:hover,
    #wrapTable td:last-child button:hover {
      background: #f8fafc !important;
      border-color: #d1d5db !important;
      transform: translateY(-1px) !important;
      box-shadow:
        0 1px 2px rgba(0, 0, 0, 0.04),
        0 10px 20px rgba(2, 6, 23, 0.08) !important;
    }

    /* responsive fino */
    @media (max-width: 1200px) {
      #wrapTable thead th:nth-child(4) {
        width: 240px !important;
      }
      #wrapTable thead th:nth-child(5) {
        width: 360px !important;
      }
    }
    @media (max-width: 992px) {
      #wrapTable thead th:nth-child(2) {
        width: 200px !important;
      }
      #wrapTable thead th:nth-child(4) {
        width: 210px !important;
      }
      #wrapTable thead th:nth-child(5) {
        width: 280px !important;
      }
    }
    /* ===== Colores Acciones (solo con CSS) ===== */

    /* Bot√≥n Editar (primer bot√≥n) */
    #wrapTable .row-actions button:first-child {
      background: #dbeafe !important; /* azul claro */
      border-color: #bfdbfe !important;
      color: #1d4ed8 !important; /* azul fuerte */
    }
    #wrapTable .row-actions button:first-child:hover {
      background: #bfdbfe !important;
      border-color: #93c5fd !important;
      color: #1e3a8a !important;
    }

    /* Bot√≥n Eliminar (segundo bot√≥n) */
    #wrapTable .row-actions button:last-child {
      background: #fee2e2 !important; /* rojo claro */
      border-color: #fecaca !important;
      color: #b91c1c !important; /* rojo fuerte */
    }
    #wrapTable .row-actions button:last-child:hover {
      background: #fecaca !important;
      border-color: #fca5a5 !important;
      color: #7f1d1d !important;
    }

    #wrapTable thead th:last-child,
    #wrapTable tbody td:last-child {
      text-align: left !important;
      padding-left: 10px !important;
    }
  </style>

  <script>
    //@ts-nocheck
    // -------- logout & guard ----------
    function _hardLogout() {
      try {
        localStorage.removeItem("token");
        localStorage.removeItem("user");
      } finally {
        location.replace("/");
      }
    }

    window.logout = _hardLogout;

    document.addEventListener("click", (e) => {
      const b = e.target.closest("#btnLogout");
      if (!b) return;
      e.preventDefault();
      _hardLogout();
    });

    (async () => {
      const token = localStorage.getItem("token");
      const uStr = localStorage.getItem("user");
      if (!token || !uStr) return _hardLogout();

      try {
        const r = await fetch("/api/auth/verify", {
          headers: { Authorization: `Bearer ${token}` },
        });
        const j = await r.json().catch(() => ({}));
        if (!r.ok || !j?.success) return _hardLogout();
      } catch {
        return _hardLogout();
      }

      const user = JSON.parse(uStr);
      if (user.rol !== "admin") return _hardLogout();

      document.getElementById("userWelcome").textContent =
        `Bienvenido, ${user.nombre}`;
      loadPage();
    })();

    // -------- page logic ----------
    let page = 1,
      limit = 10,
      total = 0,
      q = "";
    const fmt = new Intl.NumberFormat("es-EC");

    async function loadPage() {
      const token = localStorage.getItem("token");
      const url = new URL("/api/clientes", location.origin);
      url.searchParams.set("page", page);
      url.searchParams.set("limit", limit);
      if (q) url.searchParams.set("q", q);

      try {
        const r = await fetch(url, {
          headers: { Authorization: `Bearer ${token}` },
        });
        const data = await r.json().catch(() => ({ items: [], total: 0 }));
        total = data.total || 0;
        renderTable(data.items || []);
        updatePager();
      } catch (error) {
        console.error("Error cargando clientes:", error);
        document.getElementById("wrapTable").innerHTML =
          '<div class="muted">Error al cargar los datos</div>';
      }
    }

    function renderTable(items) {
      const wrap = document.getElementById("wrapTable");
      if (!items.length) {
        wrap.innerHTML = '<div class="muted">Sin resultados</div>';
        return;
      }

      wrap.innerHTML = `
        <table>
          <thead>
            <tr>
              <th>CI/RUC</th>
              <th>Nombre</th>
              <th>Tel√©fono</th>
              <th>Email</th>
              <th>Direcci√≥n</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            ${items
              .map((c) => {
                // Combinar nombres y apellidos para mostrar nombre completo
                const nombreCompleto =
                  c.tipo === "particular"
                    ? `${c.nombres || ""} ${c.apellidos || ""}`.trim()
                    : c.razon_social || "";

                return `
              <tr>
                <td>${c.identificacion || ""}</td>
                <td><strong>${nombreCompleto}</strong></td>
                <td>${c.telefono || ""}</td>
                <td>${c.correo || ""}</td>
                <td>${c.direccion || ""}</td>
                <td>
                  <div class="row-actions">
                    <button class="icon-btn" data-edit='${JSON.stringify(c).replaceAll("'", "&apos;")}'>‚úé</button>
                    <button class="icon-btn" data-del="${c.id}">üóë</button>
                  </div>
                </td>
              </tr>
              `;
              })
              .join("")}
          </tbody>
        </table>
      `;
    }

    function updatePager() {
      const pages = Math.max(1, Math.ceil(total / limit));
      document.getElementById("pageInfo").textContent =
        `P√°gina ${page} de ${fmt.format(pages)} (${fmt.format(total)} registros)`;
      document.getElementById("prev").disabled = page <= 1;
      document.getElementById("next").disabled = page >= pages;
    }

    // search & pager
    document.getElementById("btnBuscar").addEventListener("click", () => {
      q = document.getElementById("q").value.trim();
      page = 1;
      loadPage();
    });

    document.getElementById("prev").addEventListener("click", () => {
      if (page > 1) {
        page--;
        loadPage();
      }
    });

    document.getElementById("next").addEventListener("click", () => {
      page++;
      loadPage();
    });

    // modal create/edit
    const modal = document.getElementById("modalCliente");
    document.getElementById("btnNuevo").addEventListener("click", () => {
      openModal();
    });
    document
      .getElementById("closeCliente")
      .addEventListener("click", () => modal.close());

    function openModal(data = null) {
      const frm = document.getElementById("frmCliente");
      frm.reset();
      frm.dataset.id = data?.id || "";
      document.getElementById("modalTitle").textContent = data
        ? "Editar Cliente"
        : "Nuevo Cliente";

      if (data) {
        frm.tipo.value = data.tipo || "";
        frm.identificacion.value = data.identificacion || "";
        // Combinar nombres y apellidos para el campo nombre
        const nombreCompleto =
          data.tipo === "institucion"
            ? data.razon_social || ""
            : `${data.nombres || ""} ${data.apellidos || ""}`.trim();
        frm.nombre.value = nombreCompleto;
        frm.telefono.value = data.telefono || "";
        frm.email.value = data.correo || "";
        frm.direccion.value = data.direccion || "";
      }

      modal.showModal();
    }

    document.addEventListener("click", (e) => {
      const btnEdit = e.target.closest("button[data-edit]");
      if (btnEdit) {
        openModal(JSON.parse(btnEdit.dataset.edit));
        return;
      }

      const btnDel = e.target.closest("button[data-del]");
      if (btnDel) {
        delCliente(btnDel.dataset.del);
        return;
      }
    });

    document
      .getElementById("frmCliente")
      .addEventListener("submit", async (e) => {
        e.preventDefault();
        console.log("Form submit triggered"); // Debug log

        const frm = e.target;
        const payload = {
          tipo: frm.tipo.value.trim(),
          identificacion: frm.identificacion.value.trim(),
          nombre: frm.nombre.value.trim(),
          telefono: frm.telefono.value.trim(),
          email: frm.email.value.trim(),
          direccion: frm.direccion.value.trim(),
        };

        console.log("Payload:", payload); // Debug log

        const id = frm.dataset.id;
        const token = localStorage.getItem("token");

        console.log("Token:", token); // Debug log
        console.log("URL:", id ? `/api/clientes/${id}` : "/api/clientes"); // Debug log

        try {
          const r = await fetch(id ? `/api/clientes/${id}` : "/api/clientes", {
            method: id ? "PUT" : "POST",
            headers: {
              "Content-Type": "application/json",
              Authorization: `Bearer ${token}`,
            },
            body: JSON.stringify(payload),
          });

          console.log("Response status:", r.status); // Debug log

          if (r.ok) {
            modal.close();
            loadPage();
          } else {
            alert("No se pudo guardar");
          }
        } catch (error) {
          console.error("Error:", error);
          alert("Error al guardar el cliente");
        }
      });

    async function delCliente(id) {
      if (!confirm("¬øEliminar cliente?")) return;

      const token = localStorage.getItem("token");
      try {
        const r = await fetch(`/api/clientes/${id}`, {
          method: "DELETE",
          headers: { Authorization: `Bearer ${token}` },
        });

        if (r.ok) {
          loadPage();
        } else {
          alert("No se pudo eliminar");
        }
      } catch (error) {
        console.error("Error:", error);
        alert("Error al eliminar el cliente");
      }
    }
  </script>
</Layout>
